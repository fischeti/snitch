// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
//
// Register Package auto-generated by `reggen` containing data structure

package clint_reg_pkg;

  // Param list
  parameter int NumCores = 37;

  ////////////////////////////
  // Typedefs for registers //
  ////////////////////////////
  typedef struct packed {
    logic        q;
  } clint_reg2hw_msip_mreg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_low0_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_high0_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_low1_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_high1_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_low2_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_high2_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_low3_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_high3_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_low4_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_high4_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_low5_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_high5_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_low6_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_high6_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_low7_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_high7_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_low8_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_high8_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_low9_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_high9_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_low10_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_high10_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_low11_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_high11_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_low12_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_high12_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_low13_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_high13_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_low14_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_high14_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_low15_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_high15_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_low16_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_high16_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_low17_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_high17_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_low18_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_high18_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_low19_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_high19_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_low20_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_high20_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_low21_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_high21_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_low22_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_high22_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_low23_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_high23_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_low24_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_high24_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_low25_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_high25_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_low26_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_high26_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_low27_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_high27_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_low28_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_high28_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_low29_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_high29_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_low30_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_high30_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_low31_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_high31_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_low32_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_high32_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_low33_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_high33_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_low34_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_high34_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_low35_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_high35_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_low36_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtimecmp_high36_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtime_low_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } clint_reg2hw_mtime_high_reg_t;


  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } clint_hw2reg_mtime_low_reg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } clint_hw2reg_mtime_high_reg_t;


  ///////////////////////////////////////
  // Register to internal design logic //
  ///////////////////////////////////////
  typedef struct packed {
    clint_reg2hw_msip_mreg_t [36:0] msip; // [2469:2433]
    clint_reg2hw_mtimecmp_low0_reg_t mtimecmp_low0; // [2432:2401]
    clint_reg2hw_mtimecmp_high0_reg_t mtimecmp_high0; // [2400:2369]
    clint_reg2hw_mtimecmp_low1_reg_t mtimecmp_low1; // [2368:2337]
    clint_reg2hw_mtimecmp_high1_reg_t mtimecmp_high1; // [2336:2305]
    clint_reg2hw_mtimecmp_low2_reg_t mtimecmp_low2; // [2304:2273]
    clint_reg2hw_mtimecmp_high2_reg_t mtimecmp_high2; // [2272:2241]
    clint_reg2hw_mtimecmp_low3_reg_t mtimecmp_low3; // [2240:2209]
    clint_reg2hw_mtimecmp_high3_reg_t mtimecmp_high3; // [2208:2177]
    clint_reg2hw_mtimecmp_low4_reg_t mtimecmp_low4; // [2176:2145]
    clint_reg2hw_mtimecmp_high4_reg_t mtimecmp_high4; // [2144:2113]
    clint_reg2hw_mtimecmp_low5_reg_t mtimecmp_low5; // [2112:2081]
    clint_reg2hw_mtimecmp_high5_reg_t mtimecmp_high5; // [2080:2049]
    clint_reg2hw_mtimecmp_low6_reg_t mtimecmp_low6; // [2048:2017]
    clint_reg2hw_mtimecmp_high6_reg_t mtimecmp_high6; // [2016:1985]
    clint_reg2hw_mtimecmp_low7_reg_t mtimecmp_low7; // [1984:1953]
    clint_reg2hw_mtimecmp_high7_reg_t mtimecmp_high7; // [1952:1921]
    clint_reg2hw_mtimecmp_low8_reg_t mtimecmp_low8; // [1920:1889]
    clint_reg2hw_mtimecmp_high8_reg_t mtimecmp_high8; // [1888:1857]
    clint_reg2hw_mtimecmp_low9_reg_t mtimecmp_low9; // [1856:1825]
    clint_reg2hw_mtimecmp_high9_reg_t mtimecmp_high9; // [1824:1793]
    clint_reg2hw_mtimecmp_low10_reg_t mtimecmp_low10; // [1792:1761]
    clint_reg2hw_mtimecmp_high10_reg_t mtimecmp_high10; // [1760:1729]
    clint_reg2hw_mtimecmp_low11_reg_t mtimecmp_low11; // [1728:1697]
    clint_reg2hw_mtimecmp_high11_reg_t mtimecmp_high11; // [1696:1665]
    clint_reg2hw_mtimecmp_low12_reg_t mtimecmp_low12; // [1664:1633]
    clint_reg2hw_mtimecmp_high12_reg_t mtimecmp_high12; // [1632:1601]
    clint_reg2hw_mtimecmp_low13_reg_t mtimecmp_low13; // [1600:1569]
    clint_reg2hw_mtimecmp_high13_reg_t mtimecmp_high13; // [1568:1537]
    clint_reg2hw_mtimecmp_low14_reg_t mtimecmp_low14; // [1536:1505]
    clint_reg2hw_mtimecmp_high14_reg_t mtimecmp_high14; // [1504:1473]
    clint_reg2hw_mtimecmp_low15_reg_t mtimecmp_low15; // [1472:1441]
    clint_reg2hw_mtimecmp_high15_reg_t mtimecmp_high15; // [1440:1409]
    clint_reg2hw_mtimecmp_low16_reg_t mtimecmp_low16; // [1408:1377]
    clint_reg2hw_mtimecmp_high16_reg_t mtimecmp_high16; // [1376:1345]
    clint_reg2hw_mtimecmp_low17_reg_t mtimecmp_low17; // [1344:1313]
    clint_reg2hw_mtimecmp_high17_reg_t mtimecmp_high17; // [1312:1281]
    clint_reg2hw_mtimecmp_low18_reg_t mtimecmp_low18; // [1280:1249]
    clint_reg2hw_mtimecmp_high18_reg_t mtimecmp_high18; // [1248:1217]
    clint_reg2hw_mtimecmp_low19_reg_t mtimecmp_low19; // [1216:1185]
    clint_reg2hw_mtimecmp_high19_reg_t mtimecmp_high19; // [1184:1153]
    clint_reg2hw_mtimecmp_low20_reg_t mtimecmp_low20; // [1152:1121]
    clint_reg2hw_mtimecmp_high20_reg_t mtimecmp_high20; // [1120:1089]
    clint_reg2hw_mtimecmp_low21_reg_t mtimecmp_low21; // [1088:1057]
    clint_reg2hw_mtimecmp_high21_reg_t mtimecmp_high21; // [1056:1025]
    clint_reg2hw_mtimecmp_low22_reg_t mtimecmp_low22; // [1024:993]
    clint_reg2hw_mtimecmp_high22_reg_t mtimecmp_high22; // [992:961]
    clint_reg2hw_mtimecmp_low23_reg_t mtimecmp_low23; // [960:929]
    clint_reg2hw_mtimecmp_high23_reg_t mtimecmp_high23; // [928:897]
    clint_reg2hw_mtimecmp_low24_reg_t mtimecmp_low24; // [896:865]
    clint_reg2hw_mtimecmp_high24_reg_t mtimecmp_high24; // [864:833]
    clint_reg2hw_mtimecmp_low25_reg_t mtimecmp_low25; // [832:801]
    clint_reg2hw_mtimecmp_high25_reg_t mtimecmp_high25; // [800:769]
    clint_reg2hw_mtimecmp_low26_reg_t mtimecmp_low26; // [768:737]
    clint_reg2hw_mtimecmp_high26_reg_t mtimecmp_high26; // [736:705]
    clint_reg2hw_mtimecmp_low27_reg_t mtimecmp_low27; // [704:673]
    clint_reg2hw_mtimecmp_high27_reg_t mtimecmp_high27; // [672:641]
    clint_reg2hw_mtimecmp_low28_reg_t mtimecmp_low28; // [640:609]
    clint_reg2hw_mtimecmp_high28_reg_t mtimecmp_high28; // [608:577]
    clint_reg2hw_mtimecmp_low29_reg_t mtimecmp_low29; // [576:545]
    clint_reg2hw_mtimecmp_high29_reg_t mtimecmp_high29; // [544:513]
    clint_reg2hw_mtimecmp_low30_reg_t mtimecmp_low30; // [512:481]
    clint_reg2hw_mtimecmp_high30_reg_t mtimecmp_high30; // [480:449]
    clint_reg2hw_mtimecmp_low31_reg_t mtimecmp_low31; // [448:417]
    clint_reg2hw_mtimecmp_high31_reg_t mtimecmp_high31; // [416:385]
    clint_reg2hw_mtimecmp_low32_reg_t mtimecmp_low32; // [384:353]
    clint_reg2hw_mtimecmp_high32_reg_t mtimecmp_high32; // [352:321]
    clint_reg2hw_mtimecmp_low33_reg_t mtimecmp_low33; // [320:289]
    clint_reg2hw_mtimecmp_high33_reg_t mtimecmp_high33; // [288:257]
    clint_reg2hw_mtimecmp_low34_reg_t mtimecmp_low34; // [256:225]
    clint_reg2hw_mtimecmp_high34_reg_t mtimecmp_high34; // [224:193]
    clint_reg2hw_mtimecmp_low35_reg_t mtimecmp_low35; // [192:161]
    clint_reg2hw_mtimecmp_high35_reg_t mtimecmp_high35; // [160:129]
    clint_reg2hw_mtimecmp_low36_reg_t mtimecmp_low36; // [128:97]
    clint_reg2hw_mtimecmp_high36_reg_t mtimecmp_high36; // [96:65]
    clint_reg2hw_mtime_low_reg_t mtime_low; // [64:33]
    clint_reg2hw_mtime_high_reg_t mtime_high; // [32:1]
  } clint_reg2hw_t;

  ///////////////////////////////////////
  // Internal design logic to register //
  ///////////////////////////////////////
  typedef struct packed {
    clint_hw2reg_mtime_low_reg_t mtime_low; // [66:35]
    clint_hw2reg_mtime_high_reg_t mtime_high; // [34:3]
  } clint_hw2reg_t;

  // Register Address
  parameter logic [15:0] CLINT_MSIP_0_OFFSET = 16'h 0;
  parameter logic [15:0] CLINT_MSIP_1_OFFSET = 16'h 4;
  parameter logic [15:0] CLINT_MTIMECMP_LOW0_OFFSET = 16'h 4000;
  parameter logic [15:0] CLINT_MTIMECMP_HIGH0_OFFSET = 16'h 4004;
  parameter logic [15:0] CLINT_MTIMECMP_LOW1_OFFSET = 16'h 4008;
  parameter logic [15:0] CLINT_MTIMECMP_HIGH1_OFFSET = 16'h 400c;
  parameter logic [15:0] CLINT_MTIMECMP_LOW2_OFFSET = 16'h 4010;
  parameter logic [15:0] CLINT_MTIMECMP_HIGH2_OFFSET = 16'h 4014;
  parameter logic [15:0] CLINT_MTIMECMP_LOW3_OFFSET = 16'h 4018;
  parameter logic [15:0] CLINT_MTIMECMP_HIGH3_OFFSET = 16'h 401c;
  parameter logic [15:0] CLINT_MTIMECMP_LOW4_OFFSET = 16'h 4020;
  parameter logic [15:0] CLINT_MTIMECMP_HIGH4_OFFSET = 16'h 4024;
  parameter logic [15:0] CLINT_MTIMECMP_LOW5_OFFSET = 16'h 4028;
  parameter logic [15:0] CLINT_MTIMECMP_HIGH5_OFFSET = 16'h 402c;
  parameter logic [15:0] CLINT_MTIMECMP_LOW6_OFFSET = 16'h 4030;
  parameter logic [15:0] CLINT_MTIMECMP_HIGH6_OFFSET = 16'h 4034;
  parameter logic [15:0] CLINT_MTIMECMP_LOW7_OFFSET = 16'h 4038;
  parameter logic [15:0] CLINT_MTIMECMP_HIGH7_OFFSET = 16'h 403c;
  parameter logic [15:0] CLINT_MTIMECMP_LOW8_OFFSET = 16'h 4040;
  parameter logic [15:0] CLINT_MTIMECMP_HIGH8_OFFSET = 16'h 4044;
  parameter logic [15:0] CLINT_MTIMECMP_LOW9_OFFSET = 16'h 4048;
  parameter logic [15:0] CLINT_MTIMECMP_HIGH9_OFFSET = 16'h 404c;
  parameter logic [15:0] CLINT_MTIMECMP_LOW10_OFFSET = 16'h 4050;
  parameter logic [15:0] CLINT_MTIMECMP_HIGH10_OFFSET = 16'h 4054;
  parameter logic [15:0] CLINT_MTIMECMP_LOW11_OFFSET = 16'h 4058;
  parameter logic [15:0] CLINT_MTIMECMP_HIGH11_OFFSET = 16'h 405c;
  parameter logic [15:0] CLINT_MTIMECMP_LOW12_OFFSET = 16'h 4060;
  parameter logic [15:0] CLINT_MTIMECMP_HIGH12_OFFSET = 16'h 4064;
  parameter logic [15:0] CLINT_MTIMECMP_LOW13_OFFSET = 16'h 4068;
  parameter logic [15:0] CLINT_MTIMECMP_HIGH13_OFFSET = 16'h 406c;
  parameter logic [15:0] CLINT_MTIMECMP_LOW14_OFFSET = 16'h 4070;
  parameter logic [15:0] CLINT_MTIMECMP_HIGH14_OFFSET = 16'h 4074;
  parameter logic [15:0] CLINT_MTIMECMP_LOW15_OFFSET = 16'h 4078;
  parameter logic [15:0] CLINT_MTIMECMP_HIGH15_OFFSET = 16'h 407c;
  parameter logic [15:0] CLINT_MTIMECMP_LOW16_OFFSET = 16'h 4080;
  parameter logic [15:0] CLINT_MTIMECMP_HIGH16_OFFSET = 16'h 4084;
  parameter logic [15:0] CLINT_MTIMECMP_LOW17_OFFSET = 16'h 4088;
  parameter logic [15:0] CLINT_MTIMECMP_HIGH17_OFFSET = 16'h 408c;
  parameter logic [15:0] CLINT_MTIMECMP_LOW18_OFFSET = 16'h 4090;
  parameter logic [15:0] CLINT_MTIMECMP_HIGH18_OFFSET = 16'h 4094;
  parameter logic [15:0] CLINT_MTIMECMP_LOW19_OFFSET = 16'h 4098;
  parameter logic [15:0] CLINT_MTIMECMP_HIGH19_OFFSET = 16'h 409c;
  parameter logic [15:0] CLINT_MTIMECMP_LOW20_OFFSET = 16'h 40a0;
  parameter logic [15:0] CLINT_MTIMECMP_HIGH20_OFFSET = 16'h 40a4;
  parameter logic [15:0] CLINT_MTIMECMP_LOW21_OFFSET = 16'h 40a8;
  parameter logic [15:0] CLINT_MTIMECMP_HIGH21_OFFSET = 16'h 40ac;
  parameter logic [15:0] CLINT_MTIMECMP_LOW22_OFFSET = 16'h 40b0;
  parameter logic [15:0] CLINT_MTIMECMP_HIGH22_OFFSET = 16'h 40b4;
  parameter logic [15:0] CLINT_MTIMECMP_LOW23_OFFSET = 16'h 40b8;
  parameter logic [15:0] CLINT_MTIMECMP_HIGH23_OFFSET = 16'h 40bc;
  parameter logic [15:0] CLINT_MTIMECMP_LOW24_OFFSET = 16'h 40c0;
  parameter logic [15:0] CLINT_MTIMECMP_HIGH24_OFFSET = 16'h 40c4;
  parameter logic [15:0] CLINT_MTIMECMP_LOW25_OFFSET = 16'h 40c8;
  parameter logic [15:0] CLINT_MTIMECMP_HIGH25_OFFSET = 16'h 40cc;
  parameter logic [15:0] CLINT_MTIMECMP_LOW26_OFFSET = 16'h 40d0;
  parameter logic [15:0] CLINT_MTIMECMP_HIGH26_OFFSET = 16'h 40d4;
  parameter logic [15:0] CLINT_MTIMECMP_LOW27_OFFSET = 16'h 40d8;
  parameter logic [15:0] CLINT_MTIMECMP_HIGH27_OFFSET = 16'h 40dc;
  parameter logic [15:0] CLINT_MTIMECMP_LOW28_OFFSET = 16'h 40e0;
  parameter logic [15:0] CLINT_MTIMECMP_HIGH28_OFFSET = 16'h 40e4;
  parameter logic [15:0] CLINT_MTIMECMP_LOW29_OFFSET = 16'h 40e8;
  parameter logic [15:0] CLINT_MTIMECMP_HIGH29_OFFSET = 16'h 40ec;
  parameter logic [15:0] CLINT_MTIMECMP_LOW30_OFFSET = 16'h 40f0;
  parameter logic [15:0] CLINT_MTIMECMP_HIGH30_OFFSET = 16'h 40f4;
  parameter logic [15:0] CLINT_MTIMECMP_LOW31_OFFSET = 16'h 40f8;
  parameter logic [15:0] CLINT_MTIMECMP_HIGH31_OFFSET = 16'h 40fc;
  parameter logic [15:0] CLINT_MTIMECMP_LOW32_OFFSET = 16'h 4100;
  parameter logic [15:0] CLINT_MTIMECMP_HIGH32_OFFSET = 16'h 4104;
  parameter logic [15:0] CLINT_MTIMECMP_LOW33_OFFSET = 16'h 4108;
  parameter logic [15:0] CLINT_MTIMECMP_HIGH33_OFFSET = 16'h 410c;
  parameter logic [15:0] CLINT_MTIMECMP_LOW34_OFFSET = 16'h 4110;
  parameter logic [15:0] CLINT_MTIMECMP_HIGH34_OFFSET = 16'h 4114;
  parameter logic [15:0] CLINT_MTIMECMP_LOW35_OFFSET = 16'h 4118;
  parameter logic [15:0] CLINT_MTIMECMP_HIGH35_OFFSET = 16'h 411c;
  parameter logic [15:0] CLINT_MTIMECMP_LOW36_OFFSET = 16'h 4120;
  parameter logic [15:0] CLINT_MTIMECMP_HIGH36_OFFSET = 16'h 4124;
  parameter logic [15:0] CLINT_MTIME_LOW_OFFSET = 16'h bff8;
  parameter logic [15:0] CLINT_MTIME_HIGH_OFFSET = 16'h bffc;


  // Register Index
  typedef enum int {
    CLINT_MSIP_0,
    CLINT_MSIP_1,
    CLINT_MTIMECMP_LOW0,
    CLINT_MTIMECMP_HIGH0,
    CLINT_MTIMECMP_LOW1,
    CLINT_MTIMECMP_HIGH1,
    CLINT_MTIMECMP_LOW2,
    CLINT_MTIMECMP_HIGH2,
    CLINT_MTIMECMP_LOW3,
    CLINT_MTIMECMP_HIGH3,
    CLINT_MTIMECMP_LOW4,
    CLINT_MTIMECMP_HIGH4,
    CLINT_MTIMECMP_LOW5,
    CLINT_MTIMECMP_HIGH5,
    CLINT_MTIMECMP_LOW6,
    CLINT_MTIMECMP_HIGH6,
    CLINT_MTIMECMP_LOW7,
    CLINT_MTIMECMP_HIGH7,
    CLINT_MTIMECMP_LOW8,
    CLINT_MTIMECMP_HIGH8,
    CLINT_MTIMECMP_LOW9,
    CLINT_MTIMECMP_HIGH9,
    CLINT_MTIMECMP_LOW10,
    CLINT_MTIMECMP_HIGH10,
    CLINT_MTIMECMP_LOW11,
    CLINT_MTIMECMP_HIGH11,
    CLINT_MTIMECMP_LOW12,
    CLINT_MTIMECMP_HIGH12,
    CLINT_MTIMECMP_LOW13,
    CLINT_MTIMECMP_HIGH13,
    CLINT_MTIMECMP_LOW14,
    CLINT_MTIMECMP_HIGH14,
    CLINT_MTIMECMP_LOW15,
    CLINT_MTIMECMP_HIGH15,
    CLINT_MTIMECMP_LOW16,
    CLINT_MTIMECMP_HIGH16,
    CLINT_MTIMECMP_LOW17,
    CLINT_MTIMECMP_HIGH17,
    CLINT_MTIMECMP_LOW18,
    CLINT_MTIMECMP_HIGH18,
    CLINT_MTIMECMP_LOW19,
    CLINT_MTIMECMP_HIGH19,
    CLINT_MTIMECMP_LOW20,
    CLINT_MTIMECMP_HIGH20,
    CLINT_MTIMECMP_LOW21,
    CLINT_MTIMECMP_HIGH21,
    CLINT_MTIMECMP_LOW22,
    CLINT_MTIMECMP_HIGH22,
    CLINT_MTIMECMP_LOW23,
    CLINT_MTIMECMP_HIGH23,
    CLINT_MTIMECMP_LOW24,
    CLINT_MTIMECMP_HIGH24,
    CLINT_MTIMECMP_LOW25,
    CLINT_MTIMECMP_HIGH25,
    CLINT_MTIMECMP_LOW26,
    CLINT_MTIMECMP_HIGH26,
    CLINT_MTIMECMP_LOW27,
    CLINT_MTIMECMP_HIGH27,
    CLINT_MTIMECMP_LOW28,
    CLINT_MTIMECMP_HIGH28,
    CLINT_MTIMECMP_LOW29,
    CLINT_MTIMECMP_HIGH29,
    CLINT_MTIMECMP_LOW30,
    CLINT_MTIMECMP_HIGH30,
    CLINT_MTIMECMP_LOW31,
    CLINT_MTIMECMP_HIGH31,
    CLINT_MTIMECMP_LOW32,
    CLINT_MTIMECMP_HIGH32,
    CLINT_MTIMECMP_LOW33,
    CLINT_MTIMECMP_HIGH33,
    CLINT_MTIMECMP_LOW34,
    CLINT_MTIMECMP_HIGH34,
    CLINT_MTIMECMP_LOW35,
    CLINT_MTIMECMP_HIGH35,
    CLINT_MTIMECMP_LOW36,
    CLINT_MTIMECMP_HIGH36,
    CLINT_MTIME_LOW,
    CLINT_MTIME_HIGH
  } clint_id_e;

  // Register width information to check illegal writes
  parameter logic [3:0] CLINT_PERMIT [78] = '{
    4'b 1111, // index[ 0] CLINT_MSIP_0
    4'b 0001, // index[ 1] CLINT_MSIP_1
    4'b 1111, // index[ 2] CLINT_MTIMECMP_LOW0
    4'b 1111, // index[ 3] CLINT_MTIMECMP_HIGH0
    4'b 1111, // index[ 4] CLINT_MTIMECMP_LOW1
    4'b 1111, // index[ 5] CLINT_MTIMECMP_HIGH1
    4'b 1111, // index[ 6] CLINT_MTIMECMP_LOW2
    4'b 1111, // index[ 7] CLINT_MTIMECMP_HIGH2
    4'b 1111, // index[ 8] CLINT_MTIMECMP_LOW3
    4'b 1111, // index[ 9] CLINT_MTIMECMP_HIGH3
    4'b 1111, // index[10] CLINT_MTIMECMP_LOW4
    4'b 1111, // index[11] CLINT_MTIMECMP_HIGH4
    4'b 1111, // index[12] CLINT_MTIMECMP_LOW5
    4'b 1111, // index[13] CLINT_MTIMECMP_HIGH5
    4'b 1111, // index[14] CLINT_MTIMECMP_LOW6
    4'b 1111, // index[15] CLINT_MTIMECMP_HIGH6
    4'b 1111, // index[16] CLINT_MTIMECMP_LOW7
    4'b 1111, // index[17] CLINT_MTIMECMP_HIGH7
    4'b 1111, // index[18] CLINT_MTIMECMP_LOW8
    4'b 1111, // index[19] CLINT_MTIMECMP_HIGH8
    4'b 1111, // index[20] CLINT_MTIMECMP_LOW9
    4'b 1111, // index[21] CLINT_MTIMECMP_HIGH9
    4'b 1111, // index[22] CLINT_MTIMECMP_LOW10
    4'b 1111, // index[23] CLINT_MTIMECMP_HIGH10
    4'b 1111, // index[24] CLINT_MTIMECMP_LOW11
    4'b 1111, // index[25] CLINT_MTIMECMP_HIGH11
    4'b 1111, // index[26] CLINT_MTIMECMP_LOW12
    4'b 1111, // index[27] CLINT_MTIMECMP_HIGH12
    4'b 1111, // index[28] CLINT_MTIMECMP_LOW13
    4'b 1111, // index[29] CLINT_MTIMECMP_HIGH13
    4'b 1111, // index[30] CLINT_MTIMECMP_LOW14
    4'b 1111, // index[31] CLINT_MTIMECMP_HIGH14
    4'b 1111, // index[32] CLINT_MTIMECMP_LOW15
    4'b 1111, // index[33] CLINT_MTIMECMP_HIGH15
    4'b 1111, // index[34] CLINT_MTIMECMP_LOW16
    4'b 1111, // index[35] CLINT_MTIMECMP_HIGH16
    4'b 1111, // index[36] CLINT_MTIMECMP_LOW17
    4'b 1111, // index[37] CLINT_MTIMECMP_HIGH17
    4'b 1111, // index[38] CLINT_MTIMECMP_LOW18
    4'b 1111, // index[39] CLINT_MTIMECMP_HIGH18
    4'b 1111, // index[40] CLINT_MTIMECMP_LOW19
    4'b 1111, // index[41] CLINT_MTIMECMP_HIGH19
    4'b 1111, // index[42] CLINT_MTIMECMP_LOW20
    4'b 1111, // index[43] CLINT_MTIMECMP_HIGH20
    4'b 1111, // index[44] CLINT_MTIMECMP_LOW21
    4'b 1111, // index[45] CLINT_MTIMECMP_HIGH21
    4'b 1111, // index[46] CLINT_MTIMECMP_LOW22
    4'b 1111, // index[47] CLINT_MTIMECMP_HIGH22
    4'b 1111, // index[48] CLINT_MTIMECMP_LOW23
    4'b 1111, // index[49] CLINT_MTIMECMP_HIGH23
    4'b 1111, // index[50] CLINT_MTIMECMP_LOW24
    4'b 1111, // index[51] CLINT_MTIMECMP_HIGH24
    4'b 1111, // index[52] CLINT_MTIMECMP_LOW25
    4'b 1111, // index[53] CLINT_MTIMECMP_HIGH25
    4'b 1111, // index[54] CLINT_MTIMECMP_LOW26
    4'b 1111, // index[55] CLINT_MTIMECMP_HIGH26
    4'b 1111, // index[56] CLINT_MTIMECMP_LOW27
    4'b 1111, // index[57] CLINT_MTIMECMP_HIGH27
    4'b 1111, // index[58] CLINT_MTIMECMP_LOW28
    4'b 1111, // index[59] CLINT_MTIMECMP_HIGH28
    4'b 1111, // index[60] CLINT_MTIMECMP_LOW29
    4'b 1111, // index[61] CLINT_MTIMECMP_HIGH29
    4'b 1111, // index[62] CLINT_MTIMECMP_LOW30
    4'b 1111, // index[63] CLINT_MTIMECMP_HIGH30
    4'b 1111, // index[64] CLINT_MTIMECMP_LOW31
    4'b 1111, // index[65] CLINT_MTIMECMP_HIGH31
    4'b 1111, // index[66] CLINT_MTIMECMP_LOW32
    4'b 1111, // index[67] CLINT_MTIMECMP_HIGH32
    4'b 1111, // index[68] CLINT_MTIMECMP_LOW33
    4'b 1111, // index[69] CLINT_MTIMECMP_HIGH33
    4'b 1111, // index[70] CLINT_MTIMECMP_LOW34
    4'b 1111, // index[71] CLINT_MTIMECMP_HIGH34
    4'b 1111, // index[72] CLINT_MTIMECMP_LOW35
    4'b 1111, // index[73] CLINT_MTIMECMP_HIGH35
    4'b 1111, // index[74] CLINT_MTIMECMP_LOW36
    4'b 1111, // index[75] CLINT_MTIMECMP_HIGH36
    4'b 1111, // index[76] CLINT_MTIME_LOW
    4'b 1111  // index[77] CLINT_MTIME_HIGH
  };
endpackage

